{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","api/users.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","userId","username","getUser","usersFromServer","find","App","useState","setUser","initialTodo","todosFromServer","setTitle","setTodos","titleHasError","setTitleHasError","userHasError","setUserHasError","action","method","onSubmit","event","value","users","preventDefault","Math","max","prevValue","htmlFor","type","placeholder","onChange","target","defaultValue","disabled","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb9b4632.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todos } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoListProps {\n  todo: Todos;\n}\n\nexport const TodoInfo: React.FC<TodoListProps> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed === true,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && <UserInfo user={todo.user} />}\n\n    </article>\n  );\n};\n","import { Todos } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todos[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todos) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './types/Todo';\nimport todosFromServer from './api/todos';\n\nimport usersFromServer from './api/users';\n\nfunction getMaxId(users: Todos[]) {\n  const id = Math.max(\n    ...users.map(user => user.id),\n  );\n\n  return id + 1;\n}\n\nfunction getUser(userId: number) {\n  const findUser = usersFromServer.find(user => user.id === userId);\n\n  return findUser;\n}\n\nexport const App: React.FC = () => {\n  const [user, setUser] = useState(0);\n  const initialTodo: Todos[] = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUser(user),\n  }));\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(initialTodo);\n  const [titleHasError, setTitleHasError] = useState(false);\n  const [userHasError, setUserHasError] = useState(false);\n\n  const onAdd = (value: Todos) => {\n    setTodos(prevValue => [...prevValue, value]);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUser(0);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setUserHasError(!user);\n    setTitleHasError(!title);\n\n    if (!user || !title) {\n      return;\n    }\n\n    onAdd({\n      title,\n      id: getMaxId(todos),\n      completed: false,\n      userId: user,\n      user: getUser(user),\n    });\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"\">\n            Title:\n\n            <input\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={event => {\n                setTitle(event.target.value);\n                setTitleHasError(false);\n              }}\n            />\n            {titleHasError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"\">\n            User:\n\n            <select\n              data-cy=\"userSelect\"\n              defaultValue=\"Choose a user\"\n              value={user}\n              onChange={event => {\n                setUser(+event.target.value);\n                setUserHasError(false);\n              }}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n              {\n                usersFromServer.map((person) => (\n                  <option\n                    key={person.id}\n                    value={person.id}\n                  >\n                    {person.name}\n                  </option>\n                ))\n              }\n\n            </select>\n            { userHasError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}